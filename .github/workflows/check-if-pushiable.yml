# This is a basic workflow to help you get started with Actions

name: check-if-pushiable

# Controls when the workflow will run
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-if-pushiable:
    runs-on: ubuntu-latest
    if: |
      github.head_ref != 'develop'
      && !startsWith(github.head_ref, 'release')
    steps:
      - name: Checkout master
        uses: actions/checkout@v2.3.4

      - name: Init node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14.17.6'

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Write npmrc
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: |
          npm config set @pilltong-dev:registry=https://npm.pkg.github.com/
          npm config set //npm.pkg.github.com/:_authToken=${{secrets.GIT_HUB_TOKEN}}  
        
      - name: Install Dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: yarn

      - name: Download artifact
        if: steps.cache-node.outputs.cache-hit != 'true'
        uses: dawidd6/action-download-artifact@v2
        with: 
          workflow: capture-native-spec.yml
          check_artifacts: true

      - name: Get cached hash
        if: steps.cache-node.outputs.cache-hit != 'true'
        id: cached-hash
        run: |
          echo ::set-output name=ios::"$(sed '1!d' hash/hash.txt)"
          echo ::set-output name=android::"$(sed '2!d' hash/hash.txt)" 
      
      - name: Get current hash
        if: steps.cache-node.outputs.cache-hit != 'true'
        id: current-hash
        run: |
          echo ::set-output name=ios::${{ hashFiles('node_modules/**/ios/**')}}
          echo ::set-output name=android::${{ hashFiles('node_modules/**/android/**')}}

      - name: Check If No Native Change
        if: steps.cache-node.outputs.cache-hit != 'true'
        id: can-push
        run: echo ::set-output name=result::${{ steps.cached-hash.outputs.ios == steps.current-hash.outputs.ios && steps.cached-hash.outputs.android == steps.current-hash.outputs.android }}

      - name: Check If Dangerous
        if: steps.can-push.outputs.result != 'true'
        run: exit 1
